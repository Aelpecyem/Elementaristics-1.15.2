buildscript {
    repositories {
        maven {
            name = 'forge'
            url = 'https://files.minecraftforge.net/maven'
        }
        maven {
            name "better_mappings"
            url "https://maven.tterrag.com"
        }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id 'org.hidetake.ssh' version '2.10.1'
}

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

def mc_version = "1.14.4"
version = '1.0'
group = 'de.aelpecyem.elementaristics' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'modid'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.


minecraft {
    mappings channel: "snapshot", version: "20200220-mixed-1.15.2"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            properties 'fml.earlyprogresswindow': 'false'

            mods {
                elementaristics {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                elementaristics {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            properties 'fml.earlyprogresswindow': 'false'
            args '--mod', 'elementaristics', '--all', '--output', file('src/generated/resources/')

            mods {
                elementaristics {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
    mavenCentral()
    maven {
        name "yarn2mcp"
        url "https://maven.tterrag.com/"
    }
    maven {
        url = "https://maven.blamejared.com"
    }
    maven {
        url = "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    maven {
        name = "curios"
        url = "https://maven.theillusivec4.top/"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.15.2-31.1.0'
    compile fg.deobf("vazkii.patchouli:Patchouli:1.15.2-1.2-28.142") { transitive = false }

    compileOnly fg.deobf("mezz.jei:jei-1.15.2:6.0.0.2:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.15.2:6.0.0.2")

    compileOnly fg.deobf("top.theillusivec4.curios:curios:FORGE-1.15.2-2.0-beta2:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios:FORGE-1.15.2-2.0-beta2")
   // compileOnly fg.deobf("mezz.jei:jei-1.15.2:6.0.0.2:api")
   // runtimeOnly fg.deobf("mezz.jei:jei-1.15.2:6.0.0.2")

    //compileOnly fg.deobf("top.theillusivec4.curios:curios:FORGE-1.15.2-2.0-beta2:api")
    //runtimeOnly fg.deobf("top.theillusivec4.curios:curios:FORGE-1.15.2-2.0-beta2")

}

if (System.getenv().BUILD_NUMBER != null) {
    //adds the build number to the end of the version string if on a build server
    version += ".${System.getenv().BUILD_NUMBER}"
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "elementaristics",
            "Specification-Vendor": "elementaristics",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"elementaristics",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    archiveName = "${baseName} ${version}.${extension}"

    exclude "**/*.bat"
    exclude "**/*.psd"
    exclude "**/*.exe"
}

// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }

}
defaultTasks 'clean', 'runData', 'build', 'sortArtifacts', 'incrementBuildNumber', 'upload'